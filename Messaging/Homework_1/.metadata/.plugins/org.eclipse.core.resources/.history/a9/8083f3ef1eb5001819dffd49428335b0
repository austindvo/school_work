package client;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

/**
 * 
 * @author austindv
 * 
 * Creates the thread to help the client communicate to the server
 *
 */
public class Server_thread implements Runnable{
	
	//creates a socket
	private Socket socket;
	//creates a String name
	private String name;
	
	//creates a new BufferedReader to read what the socket received from the server
	private BufferedReader server_in;
	
	//creates a new BufferedReader to read what the user entered in the terminal
	private BufferedReader user_in;
	
	//creates a PrintWriter to send information to the socket
	private PrintWriter out;

	//creates
	public Server_thread(Socket socket, String name){
		this.socket = socket;
		this.name = name;
	}

	@Override
	public void run() {
		try {
			
			out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));
			server_in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			user_in = new BufferedReader(new InputStreamReader(System.in));

			//out.println(out);
			
			out.println("User " + name + " has entered the channel");
			out.flush();

			while(!socket.isClosed()){
				if(server_in.ready()){
					String line_in = server_in.readLine();
					if(line_in != null){
						System.out.println(line_in);
					}
				}
//				if(scan.hasNext()){
//					String line = scan.nextLine();
//					out.println(line);
//					out.flush();
//				}
				if(user_in.ready()) {
					out.println(name + " > " + user_in.readLine());
					out.flush();
				}
			}
		} catch (IOException x) {
			//System.err.println("Fatal Connection Error"); //if it can't print this message and the stack
		}
	}
}
