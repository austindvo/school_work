//package server;

import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.Scanner;



public class Server {

	private static ServerSocket server 			= null;
	protected static ArrayList 	clients = new ArrayList<Client_thread>();
//private static String line_in				= "";


	public static void main(String args[]) {
		try {
			server = new ServerSocket(5000);
			System.out.println("Server Started");
			System.out.println("hello");
			accept_clients();
		} catch (IOException x) {
			System.err.println("Could not listen on port 5000" + x);
			System.exit(1);
		}

//		PrintWriter out = new PrintWriter(new BufferedOutputStream(server.getOutputStream()));
//		out.flush();

	}

public static void accept_clients(){

	while(true){
		try{
			System.out.println("Waiting For Client");
			
			Socket socket = server.accept();
			
			System.out.println("Client connected");
			
			
			Client_thread client = new Client_thread(socket);
			
			Thread thread = new Thread(client);
			thread.start();
			
			clients.add(client);
			
		} catch (IOException e){
			System.out.println("Accept Failed");
		}
	}
}


public class Client_thread extends Server  implements Runnable {
	private Socket socket;
	private BufferedReader in;
	private PrintWriter out;

	public Client_thread(Socket socket){
		this.socket = socket;
	}

	public void run() {
		BufferedReader in;
		PrintWriter out;

		try {
			in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));

			while (!socket.isClosed()) {
				String line_in = in.readLine();
				if(in != null){
					for(Client_thread client : clients){
						client.getWriter().write(line_in);
					}
				}
			}

		} catch(IOException e) {
			e.printStackTrace();
		}
	}
	public PrintWriter getWriter(){
		return out;
	}
}

}

