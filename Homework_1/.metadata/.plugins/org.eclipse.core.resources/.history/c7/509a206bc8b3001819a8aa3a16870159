//package client;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.*;
import java.util.Scanner;

@SuppressWarnings("unused")
public class Client implements Runnable {

	private static Socket socket			= null;
	 private static DataInputStream input		= null;
	 private static DataOutputStream output		= null;
	 private static String line_out			= "";
	 private static String line_in			= "";



	public static void main(String args[]) throws UnknownHostException, IOException{
		Socket socket = null;
		System.out.println("Username >");
		Scanner scanner = new Scanner(System.in);
		scanner.close();
		try {

		    //connect to locahost on port 5000
			socket = new Socket("127.0.0.1", 5000);
			Thread.sleep(1000);
			Thread server = new Thread(new server_thread(socket, name));
			server.start();
			//Print that the Client has connected to the server successfully
			System.out.println("Connected to server");


		} catch(UnknownHostException u) {
            		System.out.println(u);
        	}

	}

}


public class server_thread implements Runnable{
	private Socket socket;
	private String name;
	private BufferedReader server_in;
	private BufferedReader user_in;
	private PrintWriter out;

	public server_thread(Socket socket, String name){
		this.socket = socket;
		this.name = name;
	}
	@Override
	public void run() {
		try {
			server_in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			user_in = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));

			while(!socket.isClosed()){
				if(server_in.ready()){
					String line_in = server_in.readLine();
					if(input != null){
						System.out.println(line_in);
					}
				}
				if(user_in.ready()){
					out.println(name + " > " + userIn.readLine());
				}
			}
		} catch (IOException x) {
			//System.err.println("Fatal Connection Error"); //if it can't print this message and the stack
		}
	}
}
