//package server;

import java.io.DataInputStream;
import java.io.PrintWriter;
import java.io.DataOutputStream;
import java.io.*;
import java.net.*;
import java.util.Scanner;


public class Server {

	private static ServerSocket server 			= null;
//private static String line_in				= "";


	public static void main(String args[]) {
		try {
			server = new ServerSocket(5000);
			System.out.println("Server Started");
			System.out.println("hello");
			accept_clients();
		} catch (IOException x) {
			System.err.println("Could not listen on port 5000" + x);
			System.exit(1);
		}

//		PrintWriter out = new PrintWriter(new BufferedOutputStream(server.getOutputStream()));
//		out.flush();

	}

public static void accept_clients(){
	clients = new ArrayList<client_thread>();
	while(true){
		try{
			System.out.println("Waiting For Client");
			Socket socket = server.accept();
			System.out.println("Client connected");
			client_thread client = new client_thread(socket);
			Thread thread = new Thread(client);
			thread.start();
			clients.add(client);
		} catch (IOException e){
			System.out.println("Accept Failed");
		}
	}
}

}

public class client_thread implements Runnable {
		private Socket socket;
		private BufferedReader in;
		private PrintWriter out;

		public client_thread(Socket socket){
			this.socket = socket;
		}

		public void run() {
			BufferedReader in;
			PrintWriter out;

			try {
				in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
				out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));

				while (!socket.isClosed()) {
					String line_in = in.readline();
					if(input != null){
						for(client_thread client : clients){
							client.getWriter().write(input);
						}
					}
				}

			} catch(IOException e) {
				e.printStackTrace();
			}
		}
		public PrintWriter getWriter(){
			return out;
		}
}
