package server;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

//import server.Client_thread;




public class Client_thread extends Server  implements Runnable {
	private Socket socket;
	private int id;
	private Scanner in;
	private PrintWriter out;
	private BufferedReader client_in;

	public Client_thread(Socket socket, int id){
		this.socket = socket;
		this.id = id;
	}
	
	@Override
	public void run() {

		try {
			out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));
			//in = new Scanner(new BufferedInputStream(socket.getInputStream()));
			client_in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			
			String name = client_in.readLine();
			if(name != null) {
				nm = name;
			}
			while(!socket.isClosed()){

				String line_in = client_in.readLine();
				if(line_in != null) {
					//int x = 0;
					//if(client_in.ready()){
						for(Client_thread client : clients) {
							if(client.socket.equals())
							client.getWriter().println(line_in);
							client.getWriter().flush();
						
						}
				}
			} 

		} catch(IOException e) {
			e.printStackTrace();
		}
	}
	public PrintWriter getWriter(){
		return out;
	}
}

