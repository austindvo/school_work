//package server;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

//import server.Client_thread;




public class Client_thread extends Server  implements Runnable {
	private Socket socket;
	private Scanner in;
	private PrintWriter out;
	private BufferedReader client_in;

	public Client_thread(Socket socket){
		this.socket = socket;
	}
	
	@Override
	public void run() {

		try {
			out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));
			in = new Scanner(new BufferedInputStream(socket.getInputStream()));
			client_in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

			out.println("this is a test");
			out.flush();
			
			while(!socket.isClosed()){
				
				if(client_in.ready()){
					String line_in = client_in.readLine();
					if(line_in != null){
						if(line_in.charAt(0) == '~' && line_in.charAt(1) == '~') {
							String name = line_in.substring(2) ;
							System.out.println(name + " has entered the channel");
							for(Client_thread client : clients) {
								out.println(name);
							}
						}
						
						else System.out.println(line_in);
					}
				}
//				if(user_in.ready()){
//					out.println(name + " > " + user_in.readLine());
//				}
			}

		} catch(IOException e) {
			e.printStackTrace();
		}
	}
	public PrintWriter getWriter(){
		return out;
	}
}

